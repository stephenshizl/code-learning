C51 COMPILER V9.56.0.0   QST_UART                                                          07/03/2018 13:39:00 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE QST_UART
OBJECT MODULE PLACED IN .\Objects\qst_uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE qst_uart.c OPTIMIZE(8,SPEED) BROWSE PRINT(.\Listings\qst_uart.lst) TABS(
                    -2) OBJECT(.\Objects\qst_uart.obj)

line level    source

   1          #include <REGX52.H>
   2          //#include <AT89X52.H>
   3          #include <stdio.h>
   4          #include <stdarg.h>
   5          #include <string.h>
   6          #include "qst_sw_i2c.h"
   7          #include "qst_common.h"
   8          
   9          #define FSOC 24000000L    //晶振
  10          #define BAUD  9600        //波特率
  11          
  12          volatile uint_8 uart_sending;
  13          
  14          void uart_init(void)                                //?????
  15          {
  16   1        EA=0; //关闭总中断
  17   1        TMOD&=0x0F;       //清零T1的控制位
  18   1        TMOD|=0x20;    //定时器1，模式2工作模式
  19   1        SCON=0x50;     //设置为工作方式1
  20   1        TH1=0xf3;//256-(FSOC/(BAUD*12*16));//0xf3;//4800 bps
  21   1        TL1=0xf3;//256-(FSOC/(BAUD*12*16));//0xf3;//256-jingzhen/(botelv*12*16);
  22   1        PCON|=0x80;    //发送速率加倍
  23   1        ES=1;         //打开接收中断
  24   1        TR1=1;        //打开计数器
  25   1        REN=1;        //???? 
  26   1        EA=1;         //打开总中断
  27   1      }
  28          
  29          #if 0
              void uart_send_byte(unsigned char d)
              {
                SBUF=d;
                uart_sending=1;
                while(uart_sending);
              }
              #endif
  37          
  38          void uart_send_string(unsigned char * pd)
  39          {
  40   1        while((*pd)!='\0')
  41   1        {
  42   2          //uart_send_byte(*pd);
  43   2          SBUF=* pd;
  44   2          uart_sending=1;
  45   2          while(uart_sending);
  46   2          pd++;
  47   2        }
  48   1      }
  49          
  50          void qst_log(const char *format, ...)
  51          {
  52   1        va_list arg_list;
  53   1        int_8 xdata log_buf[60];                // qst log buffer
  54   1      
C51 COMPILER V9.56.0.0   QST_UART                                                          07/03/2018 13:39:00 PAGE 2   

  55   1        memset(log_buf, 0, sizeof(log_buf));
  56   1        va_start(arg_list, format);
  57   1        //vsnprintf(qst_log_str, sizeof(qst_log_str), format, arg_list);
  58   1        vsprintf(log_buf,format, arg_list); 
  59   1        //sprintf(log_buf,format, arg_list);
  60   1        va_end(arg_list);
  61   1        uart_send_string(log_buf);
  62   1      }
  63          
  64          
  65          /*******************************************************************************
  66          * 函数名         : Usart() interrupt 4
  67          * 函数功能      : 串口通信中断函数
  68          * 输入           : 无
  69          * 输出           : 无
  70          *******************************************************************************/
  71          void uart(void) interrupt 4
  72          {
  73   1       if(RI)    //接收终端标志
  74   1       {
  75   2        RI=0;   //清除接收中断标志位
  76   2       }
  77   1       else     // 发送中断标志
  78   1       {
  79   2        TI=0;     //清除发送完成标志位
  80   2        uart_sending=0;  //清除发送完成标志位
  81   2       }
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      60
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
